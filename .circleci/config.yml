version: 2
jobs:
  build:
    branches:
      only:
      - graphene
    docker:
    - image: circleci/golang:1.12 #
    - image: circleci/postgres:9.6-alpine
      environment:
        - POSTGRES_USER: postgres
        - POSTGRES_DB: crosschain_0
    - image: quantalabs/litecoin-core:latest
      ports:
      - "19332:19332"
      - "19444:19444"
      command: litecoind -regtest=1 -rpcallowip=0.0.0.0/0 -rpcuser=user -rpcpassword=123 -deprecatedrpc=signrawtransaction -txindex -deprecatedrpc=accounts -rpcport=19332
    - image: zquestz/bitcoin-abc:0.19.2
      ports:
      - "18333:18332"
      - "18444:18444"
      command: bitcoind -regtest=1 -rpcallowip=0.0.0.0/0 -rpcuser=user -rpcpassword=123 -deprecatedrpc=signrawtransaction  -txindex -deprecatedrpc=accounts
    - image: nicolasdorier/docker-bitcoin:0.17.0
      ports:
      - "18332:18332"
      command: bitcoind -regtest=1 -rpcallowip=0.0.0.0/0 -rpcuser=user -rpcpassword=123 -deprecatedrpc=signrawtransaction -txindex -deprecatedrpc=accounts -rpcport=18332
    working_directory: /go/src/github.com/quantadex/distributed_quanta_bridge
    environment: # environment variables for the build itself
      TEST_RESULTS: /tmp/test-results # path to where test results will be saved
    steps:
    - run: mkdir -p /go/src/github.com/quantadex/distributed_quanta_bridge
    - run:
        name: Install Docker Compose
        command: |
          curl -L https://github.com/docker/compose/releases/download/1.19.0/docker-compose-`uname -s`-`uname -m` > ~/docker-compose
          chmod +x ~/docker-compose
          sudo mv ~/docker-compose /usr/local/bin/docker-compose
    - run: go get -u github.com/tebeka/go2xunit
    - setup_remote_docker:   # (2)
        docker_layer_caching: true # (3)
    - checkout
    - run: cd blockchain && docker-compose up -d
#    - run: curl -v http://litecoind:19332
    - run:
        name: Install checkout requirements
        command: |
          curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | sudo bash
          sudo apt-get install git-lfs
          git lfs install
    - run:
        name: Checkout binaries
        command: git lfs pull
    - run: tar xvf vendor.tar
    - run: mkdir -p /go/src/github.com/quantadex/distributed_quanta_bridge/reports
    - run:
        name: Setup PSQL Databases
        command: |
          sudo apt install -y postgresql-client
          createdb -h localhost crosschain_1 -U postgres
    - run:
        name: run_test
        command: |
          for name in common node registrar trust; do
              echo "Testing $name..."
              rm -f ./reports/report_$name.xml
              2>&1 go test -v ./$name/... | tee gotest_$name.out
              $WORKSPACE/bin/go2xunit -fail -input gotest_$name.out -output ./reports/report_$name.xml || :
              echo
          done
    - store_test_results:
        path: ./reports
    - store_artifacts:
        path: ./reports