version: 2
jobs:
  build:
    machine:
      docker_layer_caching: true
    branches:
      only:
      - graphene
#    docker:
#    - image: circleci/golang:1.12 #
#    - image: circleci/postgres:9.6-alpine
#      environment:
#        - POSTGRES_USER: postgres
#        - POSTGRES_DB: crosschain_0
#    - image: quantalabs/litecoin-core:latest
#      command: litecoind -regtest=1 -rpcallowip=0.0.0.0/0 -rpcuser=user -rpcpassword=123 -deprecatedrpc=signrawtransaction -txindex -deprecatedrpc=accounts -rpcport=19332 -printtoconsole
#    - image: zquestz/bitcoin-abc:0.19.2
#      command: bitcoind -regtest=1 -rpcallowip=0.0.0.0/0 -rpcuser=user -rpcpassword=123 -deprecatedrpc=signrawtransaction  -txindex -deprecatedrpc=accounts -port=18333
#    - image: nicolasdorier/docker-bitcoin:0.17.0
#      command: bitcoind -regtest=1 -rpcallowip=0.0.0.0/0 -rpcuser=user -rpcpassword=123 -deprecatedrpc=signrawtransaction -txindex -deprecatedrpc=accounts -port=18332
    working_directory: /home/pooja/go/src/github.com/quantadex/distributed_quanta_bridge
    environment: # environment variables for the build itself
      TEST_RESULTS: /tmp/test-results # path to where test results will be saved
    steps:
    - run: chown -R $USER:$USER /home/pooja
    - run: mkdir -p /home/pooja/go/src/github.com/quantadex/distributed_quanta_bridge
    - run: go get -u github.com/tebeka/go2xunit
    - checkout
#    - run: curl -v http://litecoind:19332
    - run:
        name: Install checkout requirements
        command: |
          curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | sudo bash
          sudo apt-get install git-lfs
          git lfs install
    - run:
        name: Checkout binaries
        command: git lfs pull
    - run: tar xvf vendor.tar
    - run: mkdir -p /home/pooja/go/src/github.com/quantadex/distributed_quanta_bridge/reports
    - run:
        name: Setup PSQL Databases
        command: |
          sudo apt install -y postgresql-client
          createdb -h localhost crosschain_1 -U postgres
    - run:
        name: Install Docker Compose
        command: |
          curl -L https://github.com/docker/compose/releases/download/1.19.0/docker-compose-`uname -s`-`uname -m` > ~/docker-compose
          chmod +x ~/docker-compose
          sudo mv ~/docker-compose /usr/local/bin/docker-compose
#    - setup_remote_docker:
#        docker_layer_caching: true
    - run: cd blockchain && docker-compose up -d
    - run:
        name: run_test
        command: |
          for name in common node registrar trust; do
              echo "Testing $name..."
              rm -f ./reports/report_$name.xml
              2>&1 go test -v ./$name/... | tee gotest_$name.out
              $WORKSPACE/bin/go2xunit -fail -input gotest_$name.out -output ./reports/report_$name.xml || :
              echo
          done
    - store_test_results:
        path: ./reports
    - store_artifacts:
        path: ./reports